service: rsp-cpms-checking

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
        - "sqs:ReceiveMessage"
        - "sqs:DeleteMessage"
        - "sqs:GetQueueAttributes"
      Resource: arn:aws:sqs:#{AWS::Region}:#{AWS::AccountId}:LaunchedPayments
  environment:
    PAYMENT_SERVICE_URL: "http://host.docker.internal:3031"
    process.env.SQS_URL: "aws.sqs.host"
    CLIENT_ID: 'id'
    CLIENT_SECRET: 'secret'
    CPMS_SERVICE_URL: "http://host.docker.internal:4441"
    DOCUMENT_SERVICE_URL: "http://host.docker.internal:3030"


custom:
  initialWait: 180
  maxAttempts: 4
  retryWait: 300

functions:
  checkForOrphanedPayments:
    handler: app.handler
    events:
      - sqs:
          arn: arn:aws:sqs:#{AWS::Region}:#{AWS::AccountId}:LaunchedPayments
          batchSize: 1

plugins:
  - serverless-offline

resources:
  Resources:
    DeadLetterLaunchedPayments:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "DeadLetterLaunchedPayments"
    LaunchedPayments:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "LaunchedPayments"
        DelaySeconds: ${self:custom.initialWait}
        VisibilityTimeout: ${self:custom.retryWait}
        RedrivePolicy:
          deadLetterTargetArn: arn:aws:sqs:#{AWS::Region}:#{AWS::AccountId}:DeadLetterLaunchedPayments
          maxReceiveCount: ${self:custom.maxAttempts}